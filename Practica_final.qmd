---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1 (0.5pt)

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste("El número de columnas del dataframe df_seeds es:", ncol(df_seeds))
paste("El número de filas del dataframe df_seeds es:", nrow(df_seeds))

paste("El nombre de las columnas son:", paste(colnames(df_seeds), collapse = ", "))

```

#### PREGUNTA 2 (0.5pt)

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds$tipo <- factor(df_seeds$tipo, levels = c(1,2,3), labels = c('Kama','Rosa','Canadian'))
valores = unique(df_seeds$tipo)
valores
```

#### PREGUNTA 3 (1pt)

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
paste("La media del area de las diferentes tipos es:")
tapply(df_seeds$area, df_seeds$tipo, mean)
```

#### PREGUNTA 4 (0.5pt)

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: ''Es un gráfico de tipo boxplot. La línea en el centro de la caja representa la mediana de los datos."

#### PREGUNTA 5 (1.5pt)

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x = compacto, y = area, color = tipo))  +
  geom_point(alpha=0.7, aes(size=0.2)) +
  ggtitle("Compacto vs Área por tipo")
```

#### PREGUNTA 6 (0.5pt)

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: *''Altera el dataframe df_seeds añadiendo una nueva columna con nombre 'is_kama' que tendrá el valor True si el tipo es 'Kama' y sino será False."*

#### PREGUNTA 7 (1.5pt)

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: '' Para analizar como se comportarán los datos nuevos en un modelo y de esta forma poder encontrar el modelo que mejor encaje con los datos que se esperan observar. Esto proporciona una estimación más realista de cómo se comportará el modelo en datos nuevos. De esta forma se evita el sobre ajuste (overfitting) de los datos al modelo con el que se entrena y se generaliza con los datos nuevos. Esto permite evaluar el rendimiento del modelo de manera más confiable."

#### PREGUNTA 8 (1pt)

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: ''Una regresión logística binaria, utilizado para predecir el resultado de una variable categórica. Un modelo de *predicción lineal generalizados* o *glm.*"

#### PREGUNTA 9 (1pt)

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
modelo <- glm(is_kama ~ area + perimetro + compacto + longitud + coeficient.asimetria + longitud.ranura, data = df_seeds_train, family = binomial)
summary(modelo)
```

#### PREGUNTA 10 (1pt)

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
pred <- predict(modelo, newdata = df_seeds_test, type = "response")
print("Matriz de confusión")
M <- table(real= df_seeds_test$is_kama, ifelse(pred >= 0.5, 1, 0))
M

TP <- M[2, 2]  # Verdaderos positivos
FP <- M[1, 2]  # Falsos positivos
FN <- M[2, 1]  # Falsos negativos
TN <- M[1, 1]  # Verdaderos negativos, que una semilla clasificada correctamente que no es de tipo kama, 

paste("La precisión, los aciertos que tengo del total de predicciones es:", TP / (TP + FP))
paste("La exhaustividad, el ratio de los aciertos positivos es:", TP / (TP + FN))
paste("La exactitud, cuantas prediciones son correctas:",(TN+TP)/sum(M) )
```

#### PREGUNTA 11 (1.5pt)

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: ''La primera línea *(set.seed(123)*), fija una semilla para reproducir siempre los mismos datos aleatorios. La seguda línea, crea una nueva data seleccionando las columnas *(area, perimetro, compacto, longitud, anchura, coeficient.asimetria, longitud.ranura)* del dataframe *df_seeds* y aplica el algoritmo *kmeans* a este conjunto de datos seleccionados, formando 3 clusters. La última línea, crea una tabla de contingencia donde se muestran el número de ocurrencias de cada tipo de semilla que ha sido asignada a cada cluster, donde en las filas representa a cada tipo de semilla real, y en las columnas representa cada cluster creado."
